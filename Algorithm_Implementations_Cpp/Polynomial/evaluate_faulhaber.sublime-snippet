<snippet>
	<content><![CDATA[
// f[i] = 1^i + 2^i + ... + base^i
// Returns f[0], f[1], ..., f[n-1]
// O((Complexity of product of n term polynomial))
// Requires polynomial
template<class T>
vector<T> evaluate_faulhaber(T base, int n){
	vector<T> ex(n + 1);
	T e = 1;
	for(auto i = 0; i <= n; ++ i) ex[i] = e, e /= i + 1;
	vector<T> den = ex;
	den.erase(den.begin());
	for(auto &d: den) d = -d;
	vector<T> num(n);
	T p = 1;
	for(auto i = 0; i < n; ++ i) p *= base + 1, num[i] = ex[i + 1] * (1 - p);
	vector<T> res = num * inverse(den);
	res.resize(n);
	T f = 1;
	for(auto i = 0; i < n; ++ i) res[i] *= f, f *= i + 1;
	return res;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>evaluate_faulhaber</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
