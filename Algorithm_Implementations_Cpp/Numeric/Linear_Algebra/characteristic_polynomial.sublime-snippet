<snippet>
	<content><![CDATA[
// Returns det((xI - a) * (flip ? -1 : 1))
// O(n^3)
template<class T>
vector<T> characteristic_polynomial(vector<vector<T>> a, bool flip = false){
	if(a.empty()) return {1};
	int n = (int)a.size();
	assert(n && n == (int)a[0].size());
	// transform the matrix into a similar upper Hessenberg matrix
	for(auto j = 0; j < n; ++ j){
		int pivot = -1;
		for(auto i = j + 1; i < n; ++ i) if(a[i][j]){
			pivot = i;
			break;
		}
		if(!~pivot) continue;
		for(auto k = 0; k < n; ++ k) swap(a[j + 1][k], a[pivot][k]);
		for(auto k = 0; k < n; ++ k) swap(a[k][j + 1], a[k][pivot]);
		for(auto i = j + 2; i < n; ++ i) if(a[i][j]){
			T t = a[i][j] / a[j + 1][j];
			for(auto k = 0; k < n; ++ k) a[i][k] -= a[j + 1][k] * t;
			for(auto k = 0; k < n; ++ k) a[k][j + 1] += a[k][i] * t;
		}
	}
	vector<T> val(n + 1);
	for(auto x = 0; x <= n; ++ x){
		vector<vector<T>> b(n, vector<T>(n));
		for(auto i = 0; i < n; ++ i) for(auto j = 0; j < n; ++ j) b[i][j] = i == j ? x - a[i][j] : -a[i][j];
		T sign = 1;
		for(auto j = 0; j < n - 1; ++ j){
			if(b[j + 1][j]){
				for(auto k = 0; k < n; ++ k) swap(b[j][k], b[j + 1][k]);
				sign = -sign;
			}
			if(b[j][j] && b[j + 1][j]){
				T t = b[j + 1][j] / b[j][j];
				for(auto jj = j; jj < n; ++ jj) b[j + 1][jj] -= b[j][jj] * t;
			}
		}
		T y = sign;
		for(auto i = 0; i < n; ++ i) y *= b[i][i];
		val[x] = y;
	}
	vector<T> fact(n + 1, 1), p(n + 2), res(n + 1);
	p[0] = 1;
	for(auto x = 1; x <= n; ++ x) fact[x] = fact[x - 1] * x;
	for(auto x = 0; x <= n; ++ x){
		for(auto y = n + 1; y > 0; -- y) p[y] = p[y - 1] - x * p[y];
		p[0] *= -x;
	}
	for(auto x = 0; x <= n; ++ x){
		auto q = p;
		q[n + 1] = 0;
		for(auto y = n; y >= 0; -- y) q[y] = p[y + 1] + x * q[y + 1];
		T coef = val[x] / (fact[x] * fact[n - x] * (n - x & 1 ? -1 : 1));
		for(auto y = 0; y <= n; ++ y) res[y] += q[y] * coef;
	}
	if(flip && n & 1) for(auto &x: res) x *= -1;
	return res;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>characteristic_polynomial</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
