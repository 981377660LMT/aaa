<snippet>
	<content><![CDATA[
// Requires modular and graph
template<class Zp, class T> // Used to compare two rooted trees
Zp hash_rooted_tree(const graph<T> &tr, int root, const vector<Zp> &base){
	function<Zp(int, int)> solve = [&](int u, int pe){
		Zp res = 1, x = base[(int)tr.adj[u].size() - !!~pe];
		for(auto id: tr.adj[u]) if(id != pe && (!tr.ignore || !tr.ignore(id))){
			auto &e = tr.edges[id];
			res *= (x + solve(u ^ e.from ^ e.to, id));
		}
		return res;
	};
	return solve(root, -1);
} // Fails with probability (# of leaves) / mod
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>hash_rooted_tree</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
