<snippet>
	<content><![CDATA[
template<class T>
struct floyd_warshall{
	int n;
	vector<vector<T>> dist;
	floyd_warshall(int n): dist(n, vector<T>(n)){ }
	// assumes the graph has no negative cycle
	// O(|V|^3)
	template<class U>
	void run(const vector<vector<U>> &adjm){
		assert(!n && adjm.empty() || n == (int)adjm.size() && n == (int)adjm[0].size());
		for(auto u = 0; u < n; ++ u) for(auto v = 0; v < n; ++ v) dist[u][v] = adjm[u][v];
		for(auto u = 0; u < n; ++ u) dist[u][u] = 0;
		for(auto w = 0; w < n; ++ w) for(auto u = 0; u < n; ++ u) for(auto v = 0; v < n; ++ v) dist[u][v] = min(dist[u][v], dist[u][w] + dist[w][v]);
	}
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>floyd_warshall</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
