<snippet>
	<content><![CDATA[
// Requires persistent_segment_tree and relative_query_solver_online
template<class T>
struct static_sparse_rectangle_counter_online{
	int n;
	vector<T> cmpr;
	relative_query_solver_online<1, T> ltk;
	static_sparse_rectangle_counter_online(vector<array<T, 2>> points): n((int)points.size()), cmpr(n){
		sort(points.begin(), points.end());
		vector<T> Y(n);
		for(auto i = 0; i < n; ++ i) cmpr[i] = points[i][0], Y[i] = points[i][1];
		sort(cmpr.begin(), cmpr.end()), cmpr.erase(unique(cmpr.begin(), cmpr.end()), cmpr.end());
		ltk = {Y};
	}
	// O(log(n))
	int count(T xlow, T xhigh, T ylow, T yhigh){
		xlow = lower_bound(cmpr.begin(), cmpr.end(), xlow) - cmpr.begin();
		xhigh = lower_bound(cmpr.begin(), cmpr.end(), xhigh) - cmpr.begin();
		return ltk.count_less(xlow, xhigh, yhigh) - ltk.count_less(xlow, xhigh, ylow);
	}
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>static_sparse_rectangle_counter_online</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
