<snippet>
	<content><![CDATA[
template<class T>
struct static_to_dynamic_converter{ // Support insertion in a static data structure, assuming query results can be obtained from its disjoint subsets
	vector<T> elements;
	function<void(int, const vector<T> &)> build; // build(i, a): assign structure constructed from a onto the i-th set
	function<void(int)> clear; // clear(i): assign empty structure onto the i-th set
	static_to_dynamic_converter(function<void(int, const vector<T> &)> build, function<void(int)> clear): build(build), clear(clear){ }
	void insert(T e){ // amortized O(clear + build(n) / n)
		elements.push_back(e);
		int ind = __builtin_ctz((int)elements.size());
		build(ind, {elements.end() - (1 << ind), elements.end()});
		for(auto i = 0; i < ind; ++ i) clear(i);
	}
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>static_to_dynamic_converter</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
