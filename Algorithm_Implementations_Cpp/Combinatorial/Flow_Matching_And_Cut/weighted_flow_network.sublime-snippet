<snippet>
	<content><![CDATA[
template<class T, class C>
struct weighted_flow_network{
	struct Edge{
		int from, to;
		T capacity, flow;
		C cost;
	};
	vector<vector<int>> adj;
	vector<Edge> edges;
	int n;
	T flow = 0;
	C cost = 0;
	weighted_flow_network(int n): n(n), adj(n){ }
	void clear_flow(){
		for(auto &e: edges) e.flow = 0;
		flow = 0, cost = 0;
	}
	int insert(int from, int to, T forward_cap, T backward_cap, C cost){
		assert(0 <= from && from < n && 0 <= to && to < n);
		int ind = (int)edges.size();
		adj[from].push_back((int)edges.size());
		edges.push_back({from, to, forward_cap, 0, cost});
		adj[to].push_back((int)edges.size());
		edges.push_back({to, from, backward_cap, 0, -cost});
		return ind;
	}
	void add_flow(int i, T f){
		edges[i].flow += f;
		cost += f * edges[i].cost;
		edges[i ^ 1].flow -= f;
	}
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>weighted_flow_network</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
