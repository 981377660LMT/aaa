<snippet>
	<content><![CDATA[
struct timer{
	chrono::time_point<chrono::high_resolution_clock> init = chrono::high_resolution_clock::now(), current = chrono::high_resolution_clock::now();
	void refresh(){
		current = chrono::high_resolution_clock::now();
	}
	// Measures time from last measure() call(construction if no such call)
	double measure(){
		double x = chrono::duration<double>(chrono::high_resolution_clock::now() - current).count();
		#ifdef LOCAL
		cerr << "Time Passed: " << x << endl;
		current = chrono::high_resolution_clock::now();
		#endif
		return x;
	}
	// Measures time from the construction
	double measure_from_start(){
		double x = chrono::duration<double>(chrono::high_resolution_clock::now() - init).count();
		#ifdef LOCAL
		cerr << "Time Since Epoch: " << x << endl;
		#endif
		return x;
	}
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>timer</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
