<snippet>
	<content><![CDATA[
// Given a set of intervals, return the list of sorted disjoint intervals with the same union
vector<array<int, 2>> interval_union(vector<array<int, 2>> a, bool merge_adjacent = true, bool is_sorted = false){
	if(!is_sorted) sort(a.begin(), a.end());
	for(auto [l, r]: a) assert(l <= r);
	vector<array<int, 2>> res;
	for(auto [l, r]: a){
		if(res.empty() || res.back()[1] < l || !merge_adjacent && res.back()[1] == l) res.push_back({l, r});
		else res.back()[1] = max(res.back()[1], r);
	}
	return res;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>interval_union</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
