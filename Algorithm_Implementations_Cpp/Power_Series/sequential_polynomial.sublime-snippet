<snippet>
	<content><![CDATA[
// Returns (x - a) * (x - (a + 1)) * ... * (x - (a + n - 1))
// Requires taylor_shift
// O(polymul(n-term polynomials))
template<class T>
vector<T> sequential_polynomial(int n, T a, auto polymul){
	assert(n >= 0);
	if(n == 0) return {1};
	if(n == 1) return {-a, 1};
	vector<T> res{1}, base{-a, 1};
	for(auto bit = 0, lg = __lg(n); bit <= lg; ++ bit){
		if(n & 1 << bit) res = polymul(base, taylor_shift<modular>(res, 1 << bit, polymul));
		base = polymul(base, taylor_shift<modular>(base, 1 << bit, polymul));
	}
	return res;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>sequential_polynomial</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
